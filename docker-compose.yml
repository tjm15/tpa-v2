version: '3.9'

services:
  postgres:
    image: ankane/pgvector:latest
    container_name: tpa_postgres
    environment:
      POSTGRES_USER: tpa_user
      POSTGRES_PASSWORD: tpa_password
      POSTGRES_DB: tpa_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tpa_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      bash -c "
        docker-entrypoint.sh postgres &
        sleep 5 && \
        psql -U tpa_user -d tpa_db -c 'CREATE EXTENSION IF NOT EXISTS postgis;' && \
        psql -U tpa_user -d tpa_db -c 'CREATE EXTENSION IF NOT EXISTS vector;';
        wait
      "

  redis:
    image: redis:7-alpine
    container_name: tpa_redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  backend:
    build: ./backend
    container_name: tpa_backend
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+psycopg2://tpa_user:tpa_password@postgres:5432/tpa_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"

  celery:
    build: ./backend
    container_name: tpa_celery
    command: celery -A app.main.celery_app worker --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+psycopg2://tpa_user:tpa_password@postgres:5432/tpa_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - backend
      - redis

  frontend:
    build: ./frontend
    container_name: tpa_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

volumes:
  pgdata:
  redisdata:
